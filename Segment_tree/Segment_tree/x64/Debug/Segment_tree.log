  源.cpp
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(28,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(26): message : 在编译 类 模板 成员函数“void Segment_tree<int>::set(int,T)”时
          with
          [
              T=int
          ]
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(100): message : 查看对正在编译的函数 模板 实例化“void Segment_tree<int>::set(int,T)”的引用
          with
          [
              T=int
          ]
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(97): message : 查看对正在编译的 类 模板 实例化“Segment_tree<int>”的引用
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(23,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(22): message : 在编译 类 模板 成员函数“T Segment_tree<T>::query(int,int)”时
          with
          [
              T=int
          ]
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(98): message : 查看对正在编译的函数 模板 实例化“T Segment_tree<T>::query(int,int)”的引用
          with
          [
              T=int
          ]
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(11,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(8): message : 在编译 类 模板 成员函数“Segment_tree<int>::Segment_tree(std::vector<int,std::allocator<int>> &)”时
E:\算法与数据结构\Segment_tree\Segment_tree\源.cpp(97): message : 查看对正在编译的函数 模板 实例化“Segment_tree<int>::Segment_tree(std::vector<int,std::allocator<int>> &)”的引用
  Segment_tree.vcxproj -> E:\算法与数据结构\Segment_tree\x64\Debug\Segment_tree.exe
